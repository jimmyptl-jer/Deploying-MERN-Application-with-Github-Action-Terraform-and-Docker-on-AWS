name: BookStore Build and Push Docker Images

on:
  push:
    branches:
      - main

jobs:
  docker-registry-upload:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Docker Hub Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build and Push Client Docker Image with simplified tags and metadata
      - name: Build and Export Client Docker Image
        uses: docker/build-push-action@v6
        with:
          cache-from: type=gha
          cache-to: type=gha,mode=max
          context: ./client
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/bookstore:client-${{ github.run_id }}
          push: false
          platforms: linux/amd64,linux/arm64
          labels: |
            org.opencontainers.image.source=${{ github.repository }}
            org.opencontainers.image.title="BookStore Client App"
            org.opencontainers.image.description="Client application for the BookStore project."

      # Build and Push Server Docker Image with simplified tags and metadata
      - name: Build and Export Server Docker Image
        uses: docker/build-push-action@v6
        with:
          cache-from: type=gha
          cache-to: type=gha,mode=max
          context: ./api
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/bookstore:server-${{ github.run_id }}
          push: false
          platforms: linux/amd64,linux/arm64
          labels: |
            org.opencontainers.image.source=${{ github.repository }}
            org.opencontainers.image.title="BookStore API Server"
            org.opencontainers.image.description="Server component for the BookStore project."

      - name: Run Trivy for CVE Scanning
        uses: aquasecurity/trivy-action@master
        with:
          image-ref:
            ${{ secrets.DOCKER_USERNAME }}/bookstore:server-${{ github.run_id }}
            ${{ secrets.DOCKER_USERNAME }}/bookstore:client-${{ github.run_id }}
          exit-code: 0
          format: table

      # Step 6: Docker Metadata for Client Image
      - name: Docker Metadata for Client Image
        id: client_docker_meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKER_USERNAME }}/bookstore-client
          flavor: latest=false
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=sha

      # Step 6: Docker Metadata for Server Image
      - name: Docker Metadata for Server Image
        id: server_docker_meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKER_USERNAME }}/bookstore-server
          flavor: latest=false
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=sha

      # Build and Push Client Docker Image with metadata and dynamic tags
      - name: Build and Push Client Docker Image
        uses: docker/build-push-action@v6
        with:
          cache-from: type=gha
          cache-to: type=gha,mode=max
          context: ./client
          tags: ${{ steps.client_docker_meta.outputs.tags }}
          labels: ${{ steps.client_docker_meta.outputs.labels }}
          push: true
          platforms: linux/amd64,linux/arm64

      # Build and Push Server Docker Image with metadata and dynamic tags
      - name: Build and Push Server Docker Image
        uses: docker/build-push-action@v6
        with:
          cache-from: type=gha
          cache-to: type=gha,mode=max
          context: ./api
          tags: ${{ steps.server_docker_meta.outputs.tags }}
          labels: ${{ steps.server_docker_meta.outputs.labels }}
          push: true
          platforms: linux/amd64,linux/arm64
