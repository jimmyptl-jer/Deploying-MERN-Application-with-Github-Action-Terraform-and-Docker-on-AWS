# Deploy job to build and push Docker images to Docker Hub.
name: BookStore Build and Push Docker Images

on:
  push:
    branches:
      - main

jobs:
  docker-registry-upload:
    # Specify the OS to run the job on.
    runs-on: ubuntu-latest

    # Define the steps to execute in the deployment job.
    steps:
      # Step 1: Checkout the code from the GitHub repository.
      - name: Checkout Code
        uses: actions/checkout@v4

      # Step 2: Build Docker image for the client application in ./client with a version tag.
      - name: Build Client Docker Image
        working-directory: ./client
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/bookstore:client-latest .
          docker tag ${{ secrets.DOCKER_USERNAME }}/bookstore:client-latest ${{ secrets.DOCKER_USERNAME }}/bookstore:client-${{ github.sha }}

      # Step 3: Build Docker image for the server application in ./api with a version tag.
      - name: Build Server Docker Image
        working-directory: ./api
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/bookstore:api-latest .
          docker tag ${{ secrets.DOCKER_USERNAME }}/bookstore:api-latest ${{ secrets.DOCKER_USERNAME }}/bookstore:api-${{ github.sha }}

      # Step 4: Log in to Docker Hub using Docker Hub credentials stored in GitHub secrets.
      - name: Docker Hub Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 5: Push both client and server Docker images to Docker Hub.
      - name: Push Docker Images To Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/bookstore:client-latest
          docker push ${{ secrets.DOCKER_USERNAME }}/bookstore:client-${{ github.sha }}
          docker push ${{ secrets.DOCKER_USERNAME }}/bookstore:api-latest
          docker push ${{ secrets.DOCKER_USERNAME }}/bookstore:api-${{ github.sha }}
