name: BookStore Build, Scan, and Push Docker Images

on:
  push:
    branches:
      - main

jobs:
  docker-registry-upload:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container # Use the docker-container driver for multi-platform builds

      - name: Docker Hub Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Docker Metadata for Client Image
      - name: Docker Metadata for Client Image
        id: client_docker_meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKER_USERNAME }}/bookstore-client
          flavor: latest=false
          tags: |
            type=ref,event=branch
            type=sha

      # Docker Metadata for Server Image
      - name: Docker Metadata for Server Image
        id: server_docker_meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKER_USERNAME }}/bookstore-server
          flavor: latest=false
          tags: |
            type=ref,event=branch
            type=sha

      # Build and push Client Docker Image
      - name: Build and Push Client Docker Image
        uses: docker/build-push-action@v6
        with:
          context: ./client
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          tags: ${{ steps.client_docker_meta.outputs.tags }}
          labels: ${{ steps.client_docker_meta.outputs.labels }}
          push: true

      # Build and push Server Docker Image
      - name: Build and Push Server Docker Image
        uses: docker/build-push-action@v6
        with:
          context: ./api
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          tags: ${{ steps.server_docker_meta.outputs.tags }}
          labels: ${{ steps.server_docker_meta.outputs.labels }}
          push: true

      # Run Snyk Security Scans for Client Image
      - name: Snyk Docker Scan for Client Image
        uses: snyk/actions/docker@master
        with:
          image: ${{ secrets.DOCKER_USERNAME }}/bookstore-client:${{ github.sha }}
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      # Run Snyk Security Scans for Server Image
      - name: Snyk Docker Scan for Server Image
        uses: snyk/actions/docker@master
        with:
          image: ${{ secrets.DOCKER_USERNAME }}/bookstore-server:${{ github.sha }}
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
